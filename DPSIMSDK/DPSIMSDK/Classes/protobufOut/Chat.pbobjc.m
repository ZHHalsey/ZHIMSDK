// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import <stdatomic.h>

#import "Chat.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ChatRoot

@implementation ChatRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - ChatRoot_FileDescriptor

static GPBFileDescriptor *ChatRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - Enum CMD_ID_CHAT

GPBEnumDescriptor *CMD_ID_CHAT_EnumDescriptor(void) {
  static _Atomic(GPBEnumDescriptor*) descriptor = nil;
  if (!descriptor) {
    static const char *valueNames =
        "C2SprivateChatMsgId\000S2CprivateChatMsgId\000"
        "S2CprivateChatNoticeId\000C2SprivateChatNot"
        "iceId\000C2SgroupChatMsgId\000S2CgroupChatMsgI"
        "d\000S2CgroupChatNoticeId\000C2GroupChatNotice"
        "Id\000";
    static const int32_t values[] = {
        CMD_ID_CHAT_C2SprivateChatMsgId,
        CMD_ID_CHAT_S2CprivateChatMsgId,
        CMD_ID_CHAT_S2CprivateChatNoticeId,
        CMD_ID_CHAT_C2SprivateChatNoticeId,
        CMD_ID_CHAT_C2SgroupChatMsgId,
        CMD_ID_CHAT_S2CgroupChatMsgId,
        CMD_ID_CHAT_S2CgroupChatNoticeId,
        CMD_ID_CHAT_C2GroupChatNoticeId,
    };
    static const char *extraTextFormatInfo = "\010\000\003P\000\001\003P\000\002\003S\000\003\003S\000\004\003N\000\005\003N\000\006\003Q\000\007\023\000";
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(CMD_ID_CHAT)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:CMD_ID_CHAT_IsValidValue
                              extraTextFormatInfo:extraTextFormatInfo];
    GPBEnumDescriptor *expected = nil;
    if (!atomic_compare_exchange_strong(&descriptor, &expected, worker)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL CMD_ID_CHAT_IsValidValue(int32_t value__) {
  switch (value__) {
    case CMD_ID_CHAT_C2SprivateChatMsgId:
    case CMD_ID_CHAT_S2CprivateChatMsgId:
    case CMD_ID_CHAT_S2CprivateChatNoticeId:
    case CMD_ID_CHAT_C2SprivateChatNoticeId:
    case CMD_ID_CHAT_C2SgroupChatMsgId:
    case CMD_ID_CHAT_S2CgroupChatMsgId:
    case CMD_ID_CHAT_S2CgroupChatNoticeId:
    case CMD_ID_CHAT_C2GroupChatNoticeId:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - C2SPrivateChatMsg

@implementation C2SPrivateChatMsg

@dynamic hasClientMsgId, clientMsgId;
@dynamic hasClientSendTime, clientSendTime;
@dynamic hasSenderType, senderType;
@dynamic hasFromPlayerId, fromPlayerId;
@dynamic hasBusinessType, businessType;
@dynamic hasToPlayerId, toPlayerId;
@dynamic hasMsgType, msgType;
@dynamic hasMsgBody, msgBody;
@dynamic hasExtensionInfo, extensionInfo;
@dynamic hasServerReceiveTime, serverReceiveTime;

typedef struct C2SPrivateChatMsg__storage_ {
  uint32_t _has_storage_[1];
  int32_t clientSendTime;
  int32_t senderType;
  int32_t businessType;
  int32_t serverReceiveTime;
  NSString *msgType;
  NSString *msgBody;
  NSString *extensionInfo;
  int64_t clientMsgId;
  int64_t fromPlayerId;
  int64_t toPlayerId;
} C2SPrivateChatMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "clientMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_ClientMsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "clientSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_ClientSendTime,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, clientSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "senderType",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_SenderType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, senderType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fromPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_FromPlayerId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, fromPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "businessType",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_BusinessType,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, businessType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "toPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_ToPlayerId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, toPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_MsgType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgBody",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_MsgBody,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, msgBody),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extensionInfo",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_ExtensionInfo,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, extensionInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serverReceiveTime",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SPrivateChatMsg_FieldNumber_ServerReceiveTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(C2SPrivateChatMsg__storage_, serverReceiveTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[C2SPrivateChatMsg class]
                                     rootClass:[ChatRoot class]
                                          file:ChatRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(C2SPrivateChatMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\001\013\000\002\016\000\003\n\000\004\014\000\005\014\000\006\n\000\007\007\000\010\007\000\t\r\000\n\021\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - S2CPrivateChatMsg

@implementation S2CPrivateChatMsg

@dynamic hasCode, code;
@dynamic hasMsg, msg;
@dynamic hasFromPlayerId, fromPlayerId;
@dynamic hasToPlayerId, toPlayerId;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasServerMsgId, serverMsgId;
@dynamic hasClientSendTime, clientSendTime;
@dynamic hasServerReceiveTime, serverReceiveTime;
@dynamic hasServerSendTime, serverSendTime;

typedef struct S2CPrivateChatMsg__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  int32_t clientSendTime;
  int32_t serverReceiveTime;
  int32_t serverSendTime;
  NSString *msg;
  int64_t fromPlayerId;
  int64_t toPlayerId;
  int64_t clientMsgId;
  int64_t serverMsgId;
} S2CPrivateChatMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, code),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_FromPlayerId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, fromPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "toPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_ToPlayerId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, toPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_ClientMsgId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "serverMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_ServerMsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, serverMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "clientSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_ClientSendTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, clientSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "serverReceiveTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_ServerReceiveTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, serverReceiveTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "serverSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatMsg_FieldNumber_ServerSendTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(S2CPrivateChatMsg__storage_, serverSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[S2CPrivateChatMsg class]
                                     rootClass:[ChatRoot class]
                                          file:ChatRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(S2CPrivateChatMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\003\014\000\004\n\000\005\013\000\006\013\000\007\016\000\010\021\000\t\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - S2CPrivateChatNotice

@implementation S2CPrivateChatNotice

@dynamic hasClientMsgId, clientMsgId;
@dynamic hasClientSendTime, clientSendTime;
@dynamic hasSenderType, senderType;
@dynamic hasFromPlayerId, fromPlayerId;
@dynamic hasFromPlayerRoleName, fromPlayerRoleName;
@dynamic hasFromPlayerNickName, fromPlayerNickName;
@dynamic hasFromPlayerPortrait, fromPlayerPortrait;
@dynamic hasBusinessType, businessType;
@dynamic hasToPlayerId, toPlayerId;
@dynamic hasMsgType, msgType;
@dynamic hasMsgBody, msgBody;
@dynamic hasExtensionInfo, extensionInfo;
@dynamic hasServerSendTime, serverSendTime;

typedef struct S2CPrivateChatNotice__storage_ {
  uint32_t _has_storage_[1];
  int32_t clientSendTime;
  int32_t senderType;
  int32_t businessType;
  int32_t serverSendTime;
  NSString *fromPlayerRoleName;
  NSString *fromPlayerNickName;
  NSString *fromPlayerPortrait;
  NSString *msgType;
  NSString *msgBody;
  NSString *extensionInfo;
  int64_t clientMsgId;
  int64_t fromPlayerId;
  int64_t toPlayerId;
} S2CPrivateChatNotice__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "clientMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_ClientMsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "clientSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_ClientSendTime,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, clientSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "senderType",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_SenderType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, senderType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fromPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_FromPlayerId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, fromPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "fromPlayerRoleName",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_FromPlayerRoleName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, fromPlayerRoleName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromPlayerNickName",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_FromPlayerNickName,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, fromPlayerNickName),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromPlayerPortrait",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_FromPlayerPortrait,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, fromPlayerPortrait),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "businessType",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_BusinessType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, businessType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "toPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_ToPlayerId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, toPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_MsgType,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgBody",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_MsgBody,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, msgBody),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extensionInfo",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_ExtensionInfo,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, extensionInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serverSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CPrivateChatNotice_FieldNumber_ServerSendTime,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(S2CPrivateChatNotice__storage_, serverSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[S2CPrivateChatNotice class]
                                     rootClass:[ChatRoot class]
                                          file:ChatRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(S2CPrivateChatNotice__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\r\001\013\000\002\016\000\003\n\000\004\014\000\005\022\000\006\022\000\007\022\000\010\014\000\t\n\000\n\007\000\013\007\000\014\r\000\r\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - C2SGroupChatMsg

@implementation C2SGroupChatMsg

@dynamic hasClientMsgId, clientMsgId;
@dynamic hasClientSendTime, clientSendTime;
@dynamic hasSenderType, senderType;
@dynamic hasFromPlayerId, fromPlayerId;
@dynamic hasAtPlayerIds, atPlayerIds;
@dynamic hasBusinessType, businessType;
@dynamic hasChannelId, channelId;
@dynamic hasChannelCode, channelCode;
@dynamic hasMsgType, msgType;
@dynamic hasMsgBody, msgBody;
@dynamic hasExtensionInfo, extensionInfo;
@dynamic hasServerReceiveTime, serverReceiveTime;

typedef struct C2SGroupChatMsg__storage_ {
  uint32_t _has_storage_[1];
  int32_t clientSendTime;
  int32_t senderType;
  int32_t businessType;
  int32_t serverReceiveTime;
  NSString *atPlayerIds;
  NSString *channelCode;
  NSString *msgType;
  NSString *msgBody;
  NSString *extensionInfo;
  int64_t clientMsgId;
  int64_t fromPlayerId;
  int64_t channelId;
} C2SGroupChatMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "clientMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_ClientMsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "clientSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_ClientSendTime,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, clientSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "senderType",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_SenderType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, senderType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fromPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_FromPlayerId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, fromPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "atPlayerIds",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_AtPlayerIds,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, atPlayerIds),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "businessType",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_BusinessType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, businessType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_ChannelId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, channelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "channelCode",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_ChannelCode,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, channelCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_MsgType,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgBody",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_MsgBody,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, msgBody),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extensionInfo",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_ExtensionInfo,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, extensionInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serverReceiveTime",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatMsg_FieldNumber_ServerReceiveTime,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(C2SGroupChatMsg__storage_, serverReceiveTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[C2SGroupChatMsg class]
                                     rootClass:[ChatRoot class]
                                          file:ChatRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(C2SGroupChatMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\014\001\013\000\002\016\000\003\n\000\004\014\000\005\013\000\006\014\000\007\t\000\010\013\000\t\007\000\n\007\000\013\r\000\014\021\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - S2CGroupChatMsg

@implementation S2CGroupChatMsg

@dynamic hasCode, code;
@dynamic hasMsg, msg;
@dynamic hasFromPlayerId, fromPlayerId;
@dynamic hasChannelId, channelId;
@dynamic hasChannelCode, channelCode;
@dynamic hasClientMsgId, clientMsgId;
@dynamic hasServerMsgId, serverMsgId;
@dynamic hasClientSendTime, clientSendTime;
@dynamic hasServerReceiveTime, serverReceiveTime;
@dynamic hasServerSendTime, serverSendTime;

typedef struct S2CGroupChatMsg__storage_ {
  uint32_t _has_storage_[1];
  int32_t code;
  int32_t clientSendTime;
  int32_t serverReceiveTime;
  int32_t serverSendTime;
  NSString *msg;
  NSString *channelCode;
  int64_t fromPlayerId;
  int64_t channelId;
  int64_t clientMsgId;
  int64_t serverMsgId;
} S2CGroupChatMsg__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "code",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_Code,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, code),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msg",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_Msg,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, msg),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "fromPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_FromPlayerId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, fromPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_ChannelId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, channelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "channelCode",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_ChannelCode,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, channelCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "clientMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_ClientMsgId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "serverMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_ServerMsgId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, serverMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "clientSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_ClientSendTime,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, clientSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "serverReceiveTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_ServerReceiveTime,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, serverReceiveTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "serverSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatMsg_FieldNumber_ServerSendTime,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(S2CGroupChatMsg__storage_, serverSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[S2CGroupChatMsg class]
                                     rootClass:[ChatRoot class]
                                          file:ChatRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(S2CGroupChatMsg__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\010\003\014\000\004\t\000\005\013\000\006\013\000\007\013\000\010\016\000\t\021\000\n\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - S2CGroupChatNotice

@implementation S2CGroupChatNotice

@dynamic hasClientMsgId, clientMsgId;
@dynamic hasClientSendTime, clientSendTime;
@dynamic hasSenderType, senderType;
@dynamic hasFromPlayerId, fromPlayerId;
@dynamic hasFromPlayerInfo, fromPlayerInfo;
@dynamic hasAtPlayerIds, atPlayerIds;
@dynamic hasBusinessType, businessType;
@dynamic hasChannelId, channelId;
@dynamic hasChannelCode, channelCode;
@dynamic hasMsgType, msgType;
@dynamic hasMsgBody, msgBody;
@dynamic hasExtensionInfo, extensionInfo;
@dynamic hasServerMsgId, serverMsgId;
@dynamic hasServerSendTime, serverSendTime;

typedef struct S2CGroupChatNotice__storage_ {
  uint32_t _has_storage_[1];
  int32_t clientSendTime;
  int32_t senderType;
  int32_t businessType;
  int32_t serverSendTime;
  NSString *fromPlayerInfo;
  NSString *atPlayerIds;
  NSString *channelCode;
  NSString *msgType;
  NSString *msgBody;
  NSString *extensionInfo;
  int64_t clientMsgId;
  int64_t fromPlayerId;
  int64_t channelId;
  int64_t serverMsgId;
} S2CGroupChatNotice__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "clientMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_ClientMsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, clientMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "clientSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_ClientSendTime,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, clientSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "senderType",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_SenderType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, senderType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "fromPlayerId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_FromPlayerId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, fromPlayerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "fromPlayerInfo",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_FromPlayerInfo,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, fromPlayerInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "atPlayerIds",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_AtPlayerIds,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, atPlayerIds),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "businessType",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_BusinessType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, businessType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_ChannelId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, channelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "channelCode",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_ChannelCode,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, channelCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_MsgType,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "msgBody",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_MsgBody,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, msgBody),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "extensionInfo",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_ExtensionInfo,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, extensionInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serverMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_ServerMsgId,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, serverMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "serverSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = S2CGroupChatNotice_FieldNumber_ServerSendTime,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(S2CGroupChatNotice__storage_, serverSendTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[S2CGroupChatNotice class]
                                     rootClass:[ChatRoot class]
                                          file:ChatRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(S2CGroupChatNotice__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\001\013\000\002\016\000\003\n\000\004\014\000\005\016\000\006\013\000\007\014\000\t\t\000\n\013\000\013\007\000\014\007\000\r\r\000\016\013\000"
        "\017\016\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - C2SGroupChatNotice

@implementation C2SGroupChatNotice

@dynamic hasPlayerId, playerId;
@dynamic hasChannelId, channelId;
@dynamic hasChannelCode, channelCode;
@dynamic hasServerMsgId, serverMsgId;
@dynamic hasClientReceiveTime, clientReceiveTime;

typedef struct C2SGroupChatNotice__storage_ {
  uint32_t _has_storage_[1];
  NSString *channelCode;
  int64_t playerId;
  int64_t channelId;
  int64_t serverMsgId;
  int64_t clientReceiveTime;
} C2SGroupChatNotice__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "playerId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatNotice_FieldNumber_PlayerId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(C2SGroupChatNotice__storage_, playerId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "channelId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatNotice_FieldNumber_ChannelId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(C2SGroupChatNotice__storage_, channelId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "channelCode",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatNotice_FieldNumber_ChannelCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(C2SGroupChatNotice__storage_, channelCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "serverMsgId",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatNotice_FieldNumber_ServerMsgId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(C2SGroupChatNotice__storage_, serverMsgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
      {
        .name = "clientReceiveTime",
        .dataTypeSpecific.clazz = Nil,
        .number = C2SGroupChatNotice_FieldNumber_ClientReceiveTime,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(C2SGroupChatNotice__storage_, clientReceiveTime),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[C2SGroupChatNotice class]
                                     rootClass:[ChatRoot class]
                                          file:ChatRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(C2SGroupChatNotice__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\001\010\000\002\t\000\003\013\000\004\013\000\005\021\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
